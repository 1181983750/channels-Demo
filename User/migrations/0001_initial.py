# Generated by Django 3.2.12 on 2022-05-07 08:49

import BaseOrm
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=64, verbose_name='用户昵称')),
                ('phone', models.BigIntegerField(unique=True, verbose_name='phone')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('avatar', models.CharField(default='https://img1.baidu.com/it/u=1257658679,2047150679&fm=253&fmt=auto&app=138&f=JPEG?w=450&h=400', max_length=255, verbose_name='网络头像')),
                ('identity', models.CharField(choices=[('0', '员工'), ('1', '管理员')], default='员工', max_length=32, verbose_name='身份权限')),
            ],
            options={
                'verbose_name_plural': '用户初始化信息表',
            },
            bases=(BaseOrm.BaseModel, models.Model),
        ),
        migrations.CreateModel(
            name='group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=255, null=True, verbose_name='群名称')),
                ('group_remark', models.TextField(null=True, verbose_name='群备注')),
                ('group_author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='User.user', verbose_name='群创始人')),
            ],
            options={
                'verbose_name_plural': '群初始化表',
            },
            bases=(BaseOrm.BaseModel, models.Model),
        ),
        migrations.CreateModel(
            name='ReplyFriend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255, null=True, verbose_name='附带消息')),
                ('status', models.CharField(max_length=16, null=True, verbose_name='状态：待处理，接受，拒绝')),
                ('Date', models.DateTimeField(verbose_name='申请时间')),
                ('Primary_User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Primary_User', to='User.user', verbose_name='主用户id')),
                ('accepted', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accepted', to='User.user', verbose_name='添加好友申请用户')),
            ],
            options={
                'verbose_name_plural': '添加好友消息状态表',
                'unique_together': {('Primary_User', 'accepted')},
            },
            bases=(BaseOrm.BaseModel, models.Model),
        ),
        migrations.CreateModel(
            name='group_chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Primary_User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='User.user', verbose_name='主用户id')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='User.group', verbose_name='群聊房间id')),
            ],
            options={
                'verbose_name_plural': '用户群关系表',
                'unique_together': {('Primary_User', 'group')},
            },
            bases=(BaseOrm.BaseModel, models.Model),
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Deputy_User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Deputy_id', to='User.user', verbose_name='好友id')),
                ('Primary_User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Primary_id', to='User.user', verbose_name='主用户id')),
            ],
            options={
                'verbose_name_plural': '用户联系人关系表',
                'unique_together': {('Primary_User', 'Deputy_User')},
            },
            bases=(BaseOrm.BaseModel, models.Model),
        ),
    ]
